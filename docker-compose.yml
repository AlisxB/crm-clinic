version: '3.8'
services:
  postgres:
    image: postgres:13
    container_name: crm-clinic-db
    environment:
      POSTGRES_DB: crm_clinic
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: crm-clinic-redis
    command: redis-server --requirepass admin123
    environment:
      REDIS_PASSWORD: admin123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  n8n:
    image: n8nio/n8n
    container_name: crm-clinic-n8n
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    environment:
      N8N_HOST: localhost
      N8N_PROTOCOL: http
      WEBHOOK_URL: http://localhost:5678/
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: user
      N8N_BASIC_AUTH_PASSWORD: password
      QUEUE_BULL_REDIS_HOST: redis
      QUEUE_BULL_REDIS_PORT: 6379
      QUEUE_BULL_REDIS_PASSWORD: admin123
    depends_on:
      - redis
    restart: unless-stopped

  evolution-api:
    image: atendai/evolution-api
    container_name: crm-clinic-evolution-api
    ports:
      - "8080:8080"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: admin123
      # DATABASE_URL: postgresql://admin:password@postgres:5432/crm_clinic # Descomente e ajuste se a Evolution API precisar de acesso ao PostgreSQL
      NODE_ENV: production
    depends_on:
      - redis
      # - postgres # Descomente se a Evolution API precisar de acesso ao PostgreSQL
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  n8n_data: